💡 Ideia do Projeto: API de Gerenciamento de Tarefas (Task Manager API)

Um sistema onde usuários podem se cadastrar, logar e gerenciar suas tarefas pessoais.

⚙️ Funcionalidades Principais

Autenticação - ok

Cadastro de usuário (/auth/signin) - ok

Login (/auth/signup) com JWT - ok 

Middleware de proteção para rotas privadas -ok 

Obter perfil (/users/me) - ok

* Gestão de Usuários
- Atualizar - ok - 06/09
- Deletar - ok - 06/09
- Atualizar senha - ok  06/09

Gestão de Tarefas (CRUD protegido por login)

Criar tarefa (/tasks) - ok - 06/09

Listar todas as tarefas do usuário (/tasks) - ok  - 07/09

Atualizar tarefa (/tasks/:id) - -ok - 07/09

Marcar como concluída - ok - 07/09

Deletar tarefa (/tasks/:id) - ok - 07/09

Filtros e Paginação 

Buscar tarefas por status (pendente/concluída)

Paginação (?page=1&limit=10) - ok - 07/09

- Exemplo so pra seguir

📂 Estrutura de pastas (exemplo)
project-task-manager/
│── src/
│   ├── controllers/
│   │   ├── auth.controller.js
│   │   ├── user.controller.js
│   │   └── task.controller.js
│   ├── middlewares/
│   │   └── auth.middleware.js
│   ├── models/
│   │   ├── user.model.js
│   │   └── task.model.js
│   ├── routes/
│   │   ├── auth.routes.js
│   │   ├── user.routes.js
│   │   └── task.routes.js
│   ├── utils/
│   │   └── generateToken.js
│   ├── server.js
│   └── app.js
│── .env
│── package.json



🔥 Possíveis melhorias (se quiser deixar o projeto mais robusto)

Implementar refresh token e logout

Adicionar roles (ex: admin, user)

Criar documentação com Swagger ou Postman

Testes unitários com Jest

Deploy no Render / Railway / Vercel

